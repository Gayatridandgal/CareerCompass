// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI agent that recommends career paths based on student inputs.
 *
 * - recommendCareers - A function that handles the career recommendation process.
 * - RecommendCareersInput - The input type for the recommendCareers function.
 * - RecommendCareersOutput - The return type for the recommendCareers function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendCareersInputSchema = z.object({
  interests: z.string().describe('The interests of the student.'),
  subjects: z.string().describe('The subjects the student is studying.'),
  strengths: z.string().describe('The strengths of the student.'),
});
export type RecommendCareersInput = z.infer<typeof RecommendCareersInputSchema>;

const CareerPathSchema = z.object({
  careerName: z.string().describe('The name of the career path.'),
  description: z.string().describe('A brief description of the career path.'),
  fitScore: z.number().describe('A score indicating how well the career path fits the student (0-100).'),
  strengthsAlignment: z.string().describe('Explanation of how the student strengths align with this career path.'),
});

const RecommendCareersOutputSchema = z.array(CareerPathSchema).describe('An array of recommended career paths.');
export type RecommendCareersOutput = z.infer<typeof RecommendCareersOutputSchema>;

export async function recommendCareers(input: RecommendCareersInput): Promise<RecommendCareersOutput> {
  return recommendCareersFlow(input);
}

const prompt = ai.definePrompt({
  name: 'recommendCareersPrompt',
  input: {schema: RecommendCareersInputSchema},
  output: {schema: RecommendCareersOutputSchema},
  prompt: `You are a career counselor who provides personalized career recommendations to students.

  Based on the student's interests, subjects, and strengths, recommend 3-5 suitable career paths.
  For each career path, provide a description, a fit score (0-100), and an explanation of how the student's strengths align with the career path.

  Student Interests: {{{interests}}}
  Subjects Studied: {{{subjects}}}
  Strengths: {{{strengths}}}

  Format the output as a JSON array of career paths:
  [
    {
      "careerName": "",
      "description": "",
      "fitScore": 0,
      "strengthsAlignment": ""
    }
  ]
  `,
});

const recommendCareersFlow = ai.defineFlow(
  {
    name: 'recommendCareersFlow',
    inputSchema: RecommendCareersInputSchema,
    outputSchema: RecommendCareersOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
